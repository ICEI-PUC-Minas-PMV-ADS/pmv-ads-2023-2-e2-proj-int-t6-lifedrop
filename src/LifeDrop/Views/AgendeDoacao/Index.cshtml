@model LifeDrop.Models.Agendamento
<body>

    <div class="container mt-5 col-sm-8">
        <div class="alert alert-info text-center border d-inline-block p- d-flex justify-content-center" role="alert">
            <h6 class="fs-8">Obrigatório preencher as informações pessoais em <b>Meu Perfil</b> antes de prosseguir com o agendamento</h6>
        </div>
    </div>



    <div class="container mt-5">
        <div class="row justify-content-center">
            <form asp-action="Salvar" id="form-contato" class="col-sm-6" style="background-color: #eaeaea;">
                <input type="hidden" asp-for="IdDoador" />
                <div class="row mt-3 justify-content-center">
                    <div class="col-sm-9">
                        <label for="f_titulo">Estado <span class="text-info">*</span></label>
                        <select class="form-control" id="uf">
                            <option value="">Selecione seu estado</option>
                        </select>
                    </div>
                </div>

                <div class="row mt-3 justify-content-center">
                    <div class="col-sm-9">
                        <label for="f_titulo">Município <span class="text-info">*</span></label>
                        <select class="form-control" id="municipio">
                            <option value="">Selecione seu município</option>
                        </select>
                    </div>
                </div>
                <div class="row mt-3 justify-content-center">
                    <div class="col-sm-9">
                        <label for="f_titulo">Unidade <span class="text-info">*</span></label>
                        <select asp-for="IdBancoDeSangue" class="form-control" id="unidade">
                            <option value="">Selecione a unidade</option>
                        </select>
                    </div>
                </div>

                <div class="row mt-3 justify-content-center">
                    <div class="col-sm-5">
                        <label for="f_titulo">Escolha o dia <span class="text-info">*</span></label>
                        <input asp-for="Data" type="date" class="form-control" id="data" />
                    </div>
                    <div class="col-sm-4 justify-content-center">
                        <label for="f_titulo">Escolha o horário <span class="text-info">*</span></label>
                        <select asp-for="Hora" class="form-control" id="horario">
                            <option value=""></option>
                        </select>
                    </div>
                </div>

                <div class="row mt-5 text-center">
                    <div class="col-sm-12" style="margin-bottom: 15px;">
                        <button id="btn_agendar" type="submit" class="btn btn-primary">
                            Agendar doação
                        </button>
                    </div>
                </div>
            </form>
        </div>
    </div>


    <div class="container mt-5">
        <div class="row text-center d-flex align-items-center">
            <div class="col-sm-12">
                <h5 class="text-center">Estoque de sangue na unidade selecionada</h5>
            </div>
        </div>
    </div>


    <div class="container mt-5" id="divPostoColeta">
        <div class="row">
            <div class="col-md-2 mx-auto">
                <table class="table table-bordered">
                    <thead>
                        <tr>
                            <th colspan="2" class="text-center" id="postoColeta">-</th>
                        </tr>
                    </thead>
                    <tbody>
                        <tr>
                            <td class="text-center">O+</td>
                            <td class="text-center" id="o_positivo">-</td>
                        </tr>
                        <tr>
                            <td class="text-center">O-</td>
                            <td class="text-center" id="o_negativo">-</td>
                        </tr>
                        <tr>
                            <td class="text-center">A+</td>
                            <td class="text-center" id="a_positivo">-</td>
                        </tr>
                        <tr>
                            <td class="text-center">A-</td>
                            <td class="text-center" id="a_negativo">-</td>
                        </tr>
                        <tr>
                            <td class="text-center">B+</td>
                            <td class="text-center" id="b_positivo">-</td>
                        </tr>
                        <tr>
                            <td class="text-center">B-</td>
                            <td class="text-center" id="b_negativo">-</td>
                        </tr>
                        <tr>
                            <td class="text-center">AB+</td>
                            <td class="text-center" id="ab_positivo">-</td>
                        </tr>
                        <tr>
                            <td class="text-center">AB-</td>
                            <td class="text-center" id="ab_negativo">-</td>
                        </tr>
                    </tbody>
                </table>
            </div>

        </div>
    </div>

    <div class="container mt-5">
        <div class="row justify-content-center">
            <div class="col-12 col-md-3 d-flex align-items-center">
                <p class="text-center"><b>Saiba o melhor momento para doar:</b></p>
            </div>
            <div class="col-12 col-md-5">
                <ul class="list-unstyled">
                    <li><u><b>Crítico:</b></u> Agende a doação o quanto antes</li>
                    <li><u><b>Alerta:</b></u> Agende a doação nesta semana</li>
                    <li><u><b>Adequado:</b></u> Agende a doação na próxima semana</li>
                    <li><u><b>Estável:</b></u> Aguarde 10 dias para agendar a doação</li>
                </ul>
            </div>
        </div>
    </div>
</body>

<script>
    // Preenche o select de estados (UF) em ordem alfabética
    async function popularEstados() {
        const urlUF = 'https://servicodados.ibge.gov.br/api/v1/localidades/estados';
        const ufSelect = document.getElementById("uf");
        const municipioSelect = document.getElementById("municipio");
        const unidadeSelect = document.getElementById("unidade");

        try {
            const ufRequest = await fetch(urlUF);
            const ufResponse = await ufRequest.json();

            ufResponse
                .sort((a, b) => a.nome.localeCompare(b.nome)) // Ordena os estados por nome
                .forEach(function (ufData) {
                    const option = document.createElement("option");
                    option.value = ufData.sigla;
                    option.text = ufData.nome;

                    ufSelect.add(option);
                });

            // Adiciona evento de mudança no select de UF
            ufSelect.addEventListener('change', async () => {
                const selectedUF = ufSelect.value;

                // Carrega municípios para a UF selecionada
                const municipiosUrl = `https://servicodados.ibge.gov.br/api/v1/localidades/estados/${selectedUF}/municipios`;
                const municipiosRequest = await fetch(municipiosUrl);
                const municipiosResponse = await municipiosRequest.json();

                // Preenche o select de municípios
                municipioSelect.innerHTML = '<option value="">Selecione seu município</option>';
                municipiosResponse.forEach(function (municipioData) {
                    const option = document.createElement("option");
                    option.value = municipioData.nome;
                    option.text = municipioData.nome;

                    municipioSelect.add(option);
                });
            });

            // Adiciona evento de mudança no select de Municípios
            municipioSelect.addEventListener('change', async () => {
                const selectedMunicipio = municipioSelect.value;
                const urlUnidades = window.location.href + `/GetUnidades?municipio=${selectedMunicipio}`;

                try {
                    const unidadesRequest = await fetch(urlUnidades);
                    const unidadesResponse = await unidadesRequest.json();

                    // Preenche o select de unidades
                    unidadeSelect.innerHTML = '<option value="">Selecione a unidade</option>';
                    unidadesResponse.forEach(function (unidadeData) {
                        const option = document.createElement("option");
                        option.value = unidadeData.idBancoDeSangue; 
                        option.text = unidadeData.nomeUnidade; 

                        unidadeSelect.add(option);
                    });
                } catch (error) {
                    console.error('Erro ao carregar unidades:', error);
                }
            });

            unidadeSelect.addEventListener('change', async() =>{
                const selectedUnidade = unidadeSelect.value;
                const urlUnidade = window.location.href + `/GetUnidade?id=${selectedUnidade}`;

                try {
                    const unidadeRequest = await fetch(urlUnidade);
                    const unidadeResponse = await unidadeRequest.json();
                    const oPositivo = document.getElementById("o_positivo");
                    const oNegativo = document.getElementById("o_negativo");
                    const aPositivo = document.getElementById("a_positivo");
                    const aNegativo = document.getElementById("a_negativo");
                    const bPositivo = document.getElementById("b_positivo");
                    const bNegativo = document.getElementById("b_negativo");
                    const abPositivo = document.getElementById("ab_positivo");
                    const abNegativo = document.getElementById("ab_negativo");

                    const postoColeta = document.getElementById("postoColeta");

                    // Preenche os campos
                    oPositivo.innerHTML = unidadeResponse.o_Positive;
                    oNegativo.innerHTML = unidadeResponse.o_Negative;
                    aPositivo.innerHTML = unidadeResponse.a_Positive;
                    aNegativo.innerHTML = unidadeResponse.a_Negative;
                    bPositivo.innerHTML = unidadeResponse.b_Positive;
                    bNegativo.innerHTML = unidadeResponse.b_Negative;
                    abPositivo.innerHTML = unidadeResponse.aB_Positive;
                    abNegativo.innerHTML = unidadeResponse.aB_Negative;

                    postoColeta.innerHTML = unidadeResponse.nomeUnidade
                } catch (error) {
                    console.error('Erro ao carregar unidade:', error);
                }
            });

        } catch (error) {
            console.error('Erro ao carregar UFs:', error);
        }
    }
    // Preenche o select de horários
    function popularHorarios() {
        const horarioSelect = document.getElementById("horario");

        // Limpa as opções existentes
        horarioSelect.innerHTML = '<option value="">...</option>';

        // Adiciona opções de horário a cada intervalo de 30 minutos de 8h a 18h
        for (let hora = 8; hora <= 18; hora++) {
            for (let minuto = 0; minuto < 60; minuto += 30) {
                const option = document.createElement("option");
                const horaFormatada = hora.toString().padStart(2, '0');
                const minutoFormatado = minuto.toString().padStart(2, '0');
                option.value = `${horaFormatada}:${minutoFormatado}`;
                option.text = `${horaFormatada}:${minutoFormatado}`;

                horarioSelect.add(option);
            }
        }
    }

    // Chama a função para popular os horários ao carregar a página
    window.addEventListener('load', () => {
        popularHorarios();
    });

    // Chama a função para popular os estados ao carregar a página
    window.addEventListener('load', () => {

        // Máscaras
        $('#telefoneInput').mask('(00)000000000', { placeholder: "(__)_ ____ ____" });
        $('#nascimentoInput').mask('00/00/0000', { placeholder: "__/__/____" });
        $('#cpfInput').mask('000.000.000-00', { placeholder: "___.___.___-__" });

        popularEstados();
    });


    // Função para exibir o alerta "Informações salvas"
    function exibirAlerta() {
        alert("Agendamento concluído");
    }
    // Event listener para o botão "Salvar"
    const botaoSalvar = document.getElementById('btn_agendar');
    botaoSalvar.addEventListener('click', function () {
        exibirAlerta();
    });

</script>
